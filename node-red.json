[{"id":"c0e703f6.fb5288","type":"tab","label":"Faker","disabled":false,"info":""},{"id":"25e85fe2.0ce1e","type":"tab","label":"Gateway","disabled":false,"info":""},{"id":"95e80dab.1f92a","type":"tab","label":"Cloud","disabled":false,"info":""},{"id":"5c09d4fc.97a754","type":"tab","label":"Gateway Dashboard","disabled":false,"info":""},{"id":"96cd2d27.4b11","type":"tab","label":"Cloud Dashboard","disabled":false,"info":""},{"id":"29fba84a.b2af58","type":"mqtt-broker","broker":"127.0.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"bf6a3c96.35048","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#097479","edited":false},"page-titlebar-backgroundColor":{"value":"#097479","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#333333","edited":false},"group-textColor":{"value":"#0eb8c0","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#097479","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"11207769.c31889","type":"ui_tab","name":"Home","icon":"dashboard"},{"id":"57ff470b.93fdf8","type":"ui_group","name":"Default","tab":"11207769.c31889","order":1,"disp":true,"width":"6","collapse":false},{"id":"37fd01e8.27f02e","type":"sqlitedb","db":"/home/pi/gateway.db","mode":"RWC"},{"id":"2fc66835.1846f8","type":"sqlitedb","db":"/home/pi/cloud.db","mode":"RWC"},{"id":"45e70ef4.3a9df","type":"ui_tab","name":"Cloud","icon":"dashboard","disabled":false,"hidden":false},{"id":"c6731282.9f3df","type":"ui_group","name":"Charts","tab":"45e70ef4.3a9df","order":5,"disp":true,"width":28,"collapse":false},{"id":"f8a8b2a2.819eb","type":"sqlitedb","db":"/home/pi/new-gateway.db","mode":"RWC"},{"id":"d399a81.df28658","type":"ui_tab","name":"Gateway","icon":"dashboard","disabled":false,"hidden":false},{"id":"563e46bf.5a0578","type":"ui_group","name":"Gateway","tab":"d399a81.df28658","order":1,"disp":true,"width":"32","collapse":false},{"id":"b3d0a530.0facf8","type":"node-red-contrib-httpauthfile","name":"","authType":"Basic","realm":"","filePath":"","hashed":false},{"id":"b18e9c1.45c816","type":"ui_group","name":"Form","tab":"45e70ef4.3a9df","order":1,"disp":true,"width":7,"collapse":false},{"id":"2e781aa3.1c35b6","type":"ui_group","name":"Temperature preferences","tab":"45e70ef4.3a9df","order":2,"disp":true,"width":"14","collapse":false},{"id":"743fc269.14826c","type":"ui_group","name":"Set room size","tab":"45e70ef4.3a9df","order":3,"disp":true,"width":7,"collapse":false},{"id":"ffc4eaa4.dbe528","type":"ui_group","name":"Actual State","tab":"45e70ef4.3a9df","order":4,"disp":true,"width":18,"collapse":false},{"id":"5d249837.a5cc38","type":"ui_spacer","name":"spacer","group":"ffc4eaa4.dbe528","order":9,"width":2,"height":1},{"id":"214e88f1.da7628","type":"ui_spacer","name":"spacer","group":"ffc4eaa4.dbe528","order":10,"width":2,"height":1},{"id":"9895f9a4.b9fc78","type":"ui_group","name":"Form","tab":"d399a81.df28658","order":2,"disp":true,"width":"8","collapse":false},{"id":"7ecd100c.cfa4c","type":"ui_group","name":"Actual","tab":"d399a81.df28658","order":3,"disp":true,"width":"28","collapse":false},{"id":"f8cc76eb.4be158","type":"ui_group","name":"Charts","tab":"d399a81.df28658","order":4,"disp":true,"width":"28","collapse":false},{"id":"65d8cb02.574244","type":"mqtt in","z":"c0e703f6.fb5288","name":"","topic":"node/#","qos":"2","datatype":"auto","broker":"29fba84a.b2af58","x":130,"y":340,"wires":[["a0407b5a.5e74f8","4135b8a2.cc3b08","cbb13f9e.ca5f7"]]},{"id":"a0407b5a.5e74f8","type":"debug","z":"c0e703f6.fb5288","name":"","active":false,"console":"false","complete":"false","x":470,"y":20,"wires":[]},{"id":"b87b1671.2d3ca","type":"inject","z":"c0e703f6.fb5288","name":"Barometer - pressure","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"\"node/tower1/barometer/0:0/pressure\"","vt":"str"},{"p":"_msgid","v":"\"1f4f75ab.804fca\"","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"\"node/tower1/barometer/0:0/pressure\"","payload":"97409.25","payloadType":"num","x":360,"y":580,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"13d2fc89.8ba983","type":"debug","z":"c0e703f6.fb5288","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":60,"wires":[]},{"id":"2e5aa932.b9c52e","type":"inject","z":"c0e703f6.fb5288","name":"Lux meter","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/lux-meter/0:0/illuminance","vt":"str"},{"p":"_msgid","v":"995d318b.d21e5","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/lux-meter/0:0/illuminance","payload":"721.3","payloadType":"str","x":120,"y":700,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"6f3f692c.e3ee2","type":"inject","z":"c0e703f6.fb5288","name":"PIR senzor","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/pir/-/event-count","vt":"str"},{"p":"_msgid","v":"fe7bdcd2.6bcff","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/pir/-/event-count","payload":"313","payloadType":"str","x":120,"y":760,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"a26b9057.94b208","type":"inject","z":"c0e703f6.fb5288","name":"CO2 senzor","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/co2-meter/-/concentration","vt":"str"},{"p":"_msgid","v":"c5e710.080568f","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"10","topic":"node/tower1/co2-meter/-/concentration","payload":"2167","payloadType":"str","x":130,"y":580,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"e0a9fd53.6edbb","type":"inject","z":"c0e703f6.fb5288","name":"Smaradometr","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/voc-lp-sensor/0:0/tvoc","vt":"str"},{"p":"_msgid","v":"4c546bd5.9a50d4","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"10","topic":"node/tower1/voc-lp-sensor/0:0/tvoc","payload":"0","payloadType":"str","x":130,"y":640,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"9bec877c.5a373","type":"inject","z":"c0e703f6.fb5288","name":"Battery","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/battery/-/voltage","vt":"str"},{"p":"_msgid","v":"ee847413.968a18","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/battery/-/voltage","payload":"6.26","payloadType":"str","x":330,"y":760,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"904d5d51.14c1b","type":"inject","z":"c0e703f6.fb5288","name":"Humidity meter","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/hygrometer/0:7/relative-humidity","vt":"str"},{"p":"_msgid","v":"ef844bc7.8b5b38","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/hygrometer/0:7/relative-humidity","payload":"47.8","payloadType":"str","x":380,"y":640,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"3384fefc.e7e902","type":"inject","z":"c0e703f6.fb5288","name":"Button hold-count","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/push-button/-/hold-count","vt":"str"},{"p":"_msgid","v":"cd551257.ad118","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/push-button/-/hold-count","payload":"65537","payloadType":"str","x":150,"y":820,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"caef5b64.eaddb8","type":"inject","z":"c0e703f6.fb5288","name":"Button hold-event","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/push-button/-/event-count","vt":"str"},{"p":"_msgid","v":"959f153e.8799f8","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/push-button/-/event-count","payload":"1","payloadType":"str","x":370,"y":820,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"a13ca8c.f120858","type":"inject","z":"c0e703f6.fb5288","name":"Temperature 0:7","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/thermometer/0:7/temperature","vt":"str"},{"p":"_msgid","v":"68c58adc.465fe4","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/thermometer/0:7/temperature","payload":"23.96","payloadType":"str","x":360,"y":880,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"ef164451.9633e8","type":"inject","z":"c0e703f6.fb5288","name":"Temperature 0:1","props":[{"p":"topic","vt":"str"},{"p":"payload"},{"p":"qos","v":"0","vt":"num"},{"p":"retain","v":"false","vt":"bool"},{"p":"_topic","v":"node/tower1/thermometer/0:1/temperature","vt":"str"},{"p":"_msgid","v":"ad29a7f3.2741b8","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"node/tower1/thermometer/0:1/temperature","payload":"23.5","payloadType":"str","x":140,"y":880,"wires":[["13d2fc89.8ba983","4135b8a2.cc3b08"]]},{"id":"4135b8a2.cc3b08","type":"function","z":"c0e703f6.fb5288","name":"Pre-process from Input","func":"let today = new Date();\n\nlet data_array = msg.topic.split(\"/\");\n// get data from topic\nlet data_node = data_array[0];\nlet data_node_name = data_array[1]\nlet data_senzor_name = data_array[2];\nlet data_tentononc = data_array[3];  /* nejaky ten nesmysl s dvojteckou z topicu */\nlet data_measured_variable= data_array[4];\n\nmsg.params = {\n\t\t$node : data_node,\n\t\t$node_name : data_node_name,\n\t\t$senzor : data_senzor_name,\n\t\t$tentononc : data_tentononc,\n\t\t$measured_variable: data_measured_variable,\n\t\t$payload : msg.payload,\n\t\t$qos : msg.qos,\n\t\t$retain : msg.retain,\n\t\t$_msgid : msg._msgid,\n\t\t$processed_timestamp : Date.now(),\n\t\t$processed_date : today.toLocaleDateString(),\n\t\t$processed_time : today.toLocaleTimeString()\n};\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":930,"y":420,"wires":[["a8ff3277.246858"]]},{"id":"a8ff3277.246858","type":"debug","z":"c0e703f6.fb5288","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"params","targetType":"msg","statusVal":"","statusType":"auto","x":1330,"y":420,"wires":[]},{"id":"d88007ec.7003e","type":"comment","z":"c0e703f6.fb5288","name":"Pre-process data","info":"# Function to preprocess data.\n\n### Returns JSON with:\n - node // (tower) detail information\n - node_name\n - sensor information, \n - payload, \n - measure,\n - tentononc\n - processed_date\n - processed_time\n - processed_timestamp\n - qos\n - retain\n\n\n### Info on data:\n - tentononc = something from the \"data.topic\", always present. Its combination of two numbers and colon.","x":820,"y":460,"wires":[]},{"id":"56e3c29d.56281c","type":"sqlite","z":"c0e703f6.fb5288","mydb":"37fd01e8.27f02e","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway","x":1200,"y":220,"wires":[[]]},{"id":"2a28f9a4.b6cd8e","type":"function","z":"c0e703f6.fb5288","name":"","func":"\n\nmsg.topic = `INSERT INTO measurements (node_name, senzor, cidlo, payload, time_stamp) VALUES (\"${msg.params.$node_name}\", \"${msg.params.$senzor}\", \"${msg.params.$measured_variable}\", \"${msg.params.$payload}\", \"${msg.params.$processed_timestamp}\")`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1040,"y":220,"wires":[["56e3c29d.56281c"]]},{"id":"cbb13f9e.ca5f7","type":"debug","z":"c0e703f6.fb5288","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":340,"wires":[]},{"id":"340ac5e6.791b3a","type":"inject","z":"25e85fe2.0ce1e","name":"Timer","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"240","crontab":"","once":false,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":130,"y":700,"wires":[["3c36052a.306ada"]]},{"id":"aeac17e7.48cd1","type":"http request","z":"25e85fe2.0ce1e","name":"Send request","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://localhost:1880/insertData","tls":"","persist":false,"proxy":"","authType":"","x":2400,"y":700,"wires":[["4e5edf9c.255078","5e66f924.41782"]]},{"id":"4e5edf9c.255078","type":"debug","z":"25e85fe2.0ce1e","name":"Debug response","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2640,"y":600,"wires":[]},{"id":"b448b01f.b1e668","type":"http in","z":"95e80dab.1f92a","name":"Insert data","url":"insertData","method":"post","upload":false,"swaggerDoc":"","x":120,"y":160,"wires":[["90b7ca10.3bb608"]]},{"id":"5d403e73.e14358","type":"http response","z":"95e80dab.1f92a","name":"Response","statusCode":"","headers":{},"x":2540,"y":160,"wires":[]},{"id":"2b3bcf2e.8d8f8","type":"mqtt in","z":"25e85fe2.0ce1e","name":"","topic":"node/#","qos":"2","datatype":"auto","broker":"29fba84a.b2af58","x":110,"y":360,"wires":[["7c1cbc92.f2b0bc","58c4ff0c.f69048"]]},{"id":"7c1cbc92.f2b0bc","type":"debug","z":"25e85fe2.0ce1e","name":"Incoming message","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"58c4ff0c.f69048","type":"function","z":"25e85fe2.0ce1e","name":"Pre-process from Input","func":"\nfunction trimTo5min(date){\n  const temp = new Date(date);\n  const minutes = temp.getMinutes()\n  return temp.setMinutes(minutes - (minutes%5),0,0)\n}\n\nfunction trimOnHour(date){\n  const temp = new Date(date);\n  return temp.setMinutes(0,0,0);\n}\n\nfunction trimOnDaily(date){\n  const temp = new Date(date);\n  return temp.setHours(0,0,0,0);\n}\n\n\nfunction trimOnWeekly(date){\n  const temp = new Date(date);\n  let dayOfTheWeek = temp.getDay() - 1;\n  if(dayOfTheWeek < 0) dayOfTheWeek = 6\n  return new Date(temp.setDate(temp.getDate() - dayOfTheWeek)).setHours(0,0,0,0);\n}\n\nfunction trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n}\n\nfunction trimOnYearly(date){\n  const temp = new Date(date);\n  return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n}\n\nlet today = new Date();\n\nlet data_array = msg.topic.split(\"/\");\n// get data from topic\nlet data_node = data_array[0];\nlet data_node_name = data_array[1]\nlet data_senzor_name = data_array[2];\nlet data_tentononc = data_array[3];  /* nejaky ten nesmysl s dvojteckou z topicu */\nlet data_measured_variable= data_array[4];\nlet now = Date.now()\n\nlet trimTo5minData = trimTo5min(now)\nlet trimOnHourData = trimOnHour(now)\nlet trimOnDailyData = trimOnDaily(now)\nlet trimOnWeeklyData = trimOnWeekly(now)\n\nmsg.params = {\n\t\t$node : data_node,\n\t\t$node_name : data_node_name,\n\t\t$senzor : data_senzor_name,\n\t\t$tentononc : data_tentononc,\n\t\t$measured_variable: data_measured_variable,\n\t\t$payload : msg.payload,\n\t\t$qos : msg.qos,\n\t\t$retain : msg.retain,\n\t\t$_msgid : msg._msgid,\n\t\t$processed_timestamp : now,\n\t\t$processed_date : today.toLocaleDateString(),\n\t\t$processed_time : today.toLocaleTimeString(),\n        $time_stamp_fiveMinutes: trimTo5minData,\n        $time_stamp_hourly: trimOnHourData,\n        $time_stamp_daily: trimOnDailyData,\n        $time_stamp_weekly: trimOnWeeklyData\n\n};\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is deployed.\nfunction trimTo5min(date){\n  const temp = new Date(date);\n  const minutes = temp.getMinutes()\n  return temp.setMinutes(minutes - (minutes%5),0,0)\n}\n\nfunction trimOnHour(date){\n  const temp = new Date(date);\n  return temp.setMinutes(0,0,0);\n}\n\nfunction trimOnDaily(date){\n  const temp = new Date(date);\n  return temp.setHours(0,0,0,0);\n}\n\n\nfunction trimOnWeekly(date){\n  const temp = new Date(date);\n  let dayOfTheWeek = temp.getDay() - 1;\n  if(dayOfTheWeek < 0) dayOfTheWeek = 6\n  return new Date(temp.setDate(temp.getDate() - dayOfTheWeek)).setHours(0,0,0,0);\n}\n\nfunction trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n}\n\nfunction trimOnYearly(date){\n  const temp = new Date(date);\n  return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n}","finalize":"","x":490,"y":360,"wires":[["b784673d.1bf97","b7697254.a483"]]},{"id":"b784673d.1bf97","type":"debug","z":"25e85fe2.0ce1e","name":"Preprocessing output","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"params","targetType":"msg","statusVal":"","statusType":"auto","x":800,"y":440,"wires":[]},{"id":"d8327b12.da2a7","type":"comment","z":"25e85fe2.0ce1e","name":"Pre-process data","info":"# Function to preprocess data.\n\n### Returns JSON with:\n - node // (tower) detail information\n - node_name\n - sensor information, \n - payload, \n - measure,\n - tentononc\n - processed_date\n - processed_time\n - processed_timestamp\n - qos\n - retain\n\n\n### Info on data:\n - tentononc = something from the \"data.topic\", always present. Its combination of two numbers and colon.\n \n### Calculating timeframes for grouping","x":140,"y":280,"wires":[]},{"id":"fffb7226.e6fd48","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"new-gateway.db","x":1000,"y":360,"wires":[[]]},{"id":"b7697254.a483","type":"function","z":"25e85fe2.0ce1e","name":"SQLite INSERT","func":"\n\n\nmsg.topic = `INSERT INTO measurements (node_name, sensor, detector, payload, time_stamp, time_stamp_fiveMinutes, time_stamp_hourly, time_stamp_daily, time_stamp_weekly) VALUES (\"${msg.params.$node_name}\", \"${msg.params.$senzor}\", \"${msg.params.$measured_variable}\", \"${msg.params.$payload}\", \"${msg.params.$processed_timestamp}\", \"${msg.params.$time_stamp_fiveMinutes}\", \"${msg.params.$time_stamp_hourly}\", \"${msg.params.$time_stamp_daily}\", \"${msg.params.$time_stamp_weekly}\")`\n\nreturn msg;\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":780,"y":360,"wires":[["fffb7226.e6fd48"]]},{"id":"f5087dcd.d565e8","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"fixed","sql":"SELECT * FROM measurements WHERE transfered_timestamp IS NULL LIMIT 100;","name":"SQLite SELECT DATA FOR TRANSFER","x":1480,"y":700,"wires":[["a6408322.bba358","7e757fd2.720c7"]]},{"id":"a6408322.bba358","type":"debug","z":"25e85fe2.0ce1e","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1810,"y":620,"wires":[]},{"id":"9242431.0864c4","type":"function","z":"95e80dab.1f92a","name":"Create transfered_timestamp","func":"msg.payload = msg.req.body\nmsg.payload.transfered_timestamp = Date.now()\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2280,"y":160,"wires":[["5d403e73.e14358","105371e6.eb3626"]]},{"id":"105371e6.eb3626","type":"debug","z":"95e80dab.1f92a","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2550,"y":240,"wires":[]},{"id":"94b796d.eb896e8","type":"function","z":"25e85fe2.0ce1e","name":"SQLite UPDATE Transfer params","func":"/*if (msg.statusCode !== 200) {\n    // msg.topic = `UPDATE measurements SET transfered_message = '${msg.statusCode}'`\n    // return msg\n    return msg;\n}*/\n\nmsg.payload = JSON.parse(msg.payload)\nmsg.topic = `UPDATE measurements SET transfered_message = '${msg.statusCode}', transfered_timestamp = '${msg.payload.transfered_timestamp}' WHERE time_stamp = '${msg.payload.time_stamp}' AND node_name = '${msg.payload.node_name}' AND sensor = '${msg.payload.sensor}' AND detector = '${msg.payload.detector}'`\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2900,"y":700,"wires":[["b59597fa.1fe6c8","d7e10312.2f58"]]},{"id":"b59597fa.1fe6c8","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":3170,"y":700,"wires":[["7cf160d5.07644"]]},{"id":"d7e10312.2f58","type":"debug","z":"25e85fe2.0ce1e","name":"debug","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":3150,"y":600,"wires":[]},{"id":"7cf160d5.07644","type":"debug","z":"25e85fe2.0ce1e","name":"debug db update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":3390,"y":600,"wires":[]},{"id":"5e66f924.41782","type":"switch","z":"25e85fe2.0ce1e","name":"Is status 200?","property":"statusCode","propertyType":"msg","rules":[{"t":"eq","v":"200","vt":"str"},{"t":"neq","v":"200","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":2640,"y":700,"wires":[["94b796d.eb896e8"],["32bed2f6.ca1fb6"]]},{"id":"32bed2f6.ca1fb6","type":"debug","z":"25e85fe2.0ce1e","name":"API http output","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2820,"y":800,"wires":[]},{"id":"78b1fbf6.caf83c","type":"function","z":"95e80dab.1f92a","name":"SQLite Insert Data and compute timeframes","func":"  \nfunction trimTo5min(date){\n  const temp = new Date(date);\n  const minutes = temp.getMinutes()\n  return temp.setMinutes(minutes - (minutes%5),0,0)\n}\n\nfunction trimOnHour(date){\n  const temp = new Date(date);\n  return temp.setMinutes(0,0,0);\n}\n\nfunction trimOnDaily(date){\n  const temp = new Date(date);\n  return temp.setHours(0,0,0,0);\n}\n\n\nfunction trimOnWeekly(date){\n  const temp = new Date(date);\n  let dayOfTheWeek = temp.getDay() - 1;\n  if(dayOfTheWeek < 0) dayOfTheWeek = 6\n  return new Date(temp.setDate(temp.getDate() - dayOfTheWeek)).setHours(0,0,0,0);\n}\n\nfunction trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n}\n\nfunction trimOnYearly(date){\n  const temp = new Date(date);\n  return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n}\n  \n\nlet temp = Date.now()\n// Ziskani gw z tokenu\nlet gw = msg.gw.split(\":\")[0]\n// doplneni agregace\nmsg.payload = {\n    ...msg.insertData,\n    time_stamp_fiveMinutes: trimTo5min(msg.insertData.time_stamp),\n    time_stamp_hourly: trimOnHour(msg.insertData.time_stamp),\n    time_stamp_daily: trimOnDaily(msg.insertData.time_stamp),\n    time_stamp_weekly: trimOnWeekly(msg.insertData.time_stamp),\n    time_stamp_monthly: trimOnMontly(msg.insertData.time_stamp),\n    time_stamp_yearly: trimOnYearly(msg.insertData.time_stamp)\n}\n//msg.payload = msg.payload[0]\nmsg.topic = `INSERT INTO measurements (node_name, sensor, detector, payload, time_stamp, gateway, transfered_timestamp, time_stamp_fiveMinutes, time_stamp_hourly, time_stamp_daily, time_stamp_monthly, time_stamp_weekly, time_stamp_yearly) VALUES (\"${msg.payload.node_name}\", \"${msg.payload.sensor}\", \"${msg.payload.detector}\", \"${msg.payload.payload}\", \"${msg.payload.time_stamp}\", \"${gw}\", \"${temp}\", \"${msg.payload.time_stamp_fiveMinutes}\", \"${msg.payload.time_stamp_hourly}\", \"${msg.payload.time_stamp_daily}\", \"${msg.payload.time_stamp_monthly}\", \"${msg.payload.time_stamp_weekly}\", \"${msg.payload.time_stamp_yearly}\")` \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"\n  \n  ","finalize":"","x":1790,"y":160,"wires":[["62f28c39.6aee04"]]},{"id":"62f28c39.6aee04","type":"sqlite","z":"95e80dab.1f92a","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":2060,"y":160,"wires":[["9242431.0864c4","c0d48675.c1894"]]},{"id":"bdd07865.0b0458","type":"function","z":"95e80dab.1f92a","name":"Get GW credentials for comparison and Authorize","func":"var creadentials = msg.gw.split(':');\n\nreturn {\n    ...msg,\n    authorized: msg.payload.findIndex((p) => p.login == creadentials[0] && p.pwd == creadentials[1]) != -1\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1190,"y":160,"wires":[["b485670.9b57998"]]},{"id":"59f7ee63.35bd88","type":"debug","z":"95e80dab.1f92a","name":"Debug request","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1700,"y":240,"wires":[]},{"id":"c0d48675.c1894","type":"debug","z":"95e80dab.1f92a","name":"Debug request for add","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2240,"y":240,"wires":[]},{"id":"78735dd1.d449b4","type":"comment","z":"25e85fe2.0ce1e","name":"Save to gateway DB","info":"# Saves data to Gateway DB","x":150,"y":240,"wires":[]},{"id":"36f57a6a.3ef4de","type":"comment","z":"25e85fe2.0ce1e","name":"Timed sync to cloud DB","info":"# Sync gateway data to cloud DB based on timer and updates transfer data in gateway DB.","x":160,"y":620,"wires":[]},{"id":"facc3e8.524c9c","type":"debug","z":"25e85fe2.0ce1e","name":"No data to sync","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2140,"y":800,"wires":[]},{"id":"7e757fd2.720c7","type":"switch","z":"25e85fe2.0ce1e","name":"Any records for transfer?","property":"payload.length","propertyType":"msg","rules":[{"t":"neq","v":"0","vt":"str"},{"t":"eq","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1830,"y":700,"wires":[["49682bfa.cbf154"],["facc3e8.524c9c"]]},{"id":"49682bfa.cbf154","type":"function","z":"25e85fe2.0ce1e","name":"Records to one-by-one","func":"return [msg.payload.map((p) => ({\n    ...msg,\n    payload: {\n        ...p\n    }\n}))];","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2130,"y":700,"wires":[["aeac17e7.48cd1","5cf7799e.3ec3d8"]]},{"id":"35804a1.1dc24b6","type":"inject","z":"25e85fe2.0ce1e","name":"Timer","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":130,"y":940,"wires":[["1b50444f.b5c52c"]]},{"id":"d2c06c8b.6550f","type":"comment","z":"25e85fe2.0ce1e","name":"Timed delete of synced data (week and more old)","info":"# Sync gateway data to cloud DB based on timer and updates transfer data in gateway DB.","x":240,"y":880,"wires":[]},{"id":"1b50444f.b5c52c","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"fixed","sql":"DELETE FROM measurements WHERE transfered_timestamp is not null and (((select strftime('%s', 'now')) *1000) - time_stamp) > 1642855186","name":"SQLite DELETE","x":340,"y":940,"wires":[["100d0b29.ae77d5"]]},{"id":"100d0b29.ae77d5","type":"debug","z":"25e85fe2.0ce1e","name":"Delete log","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":560,"y":940,"wires":[]},{"id":"5cf7799e.3ec3d8","type":"debug","z":"25e85fe2.0ce1e","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2410,"y":800,"wires":[]},{"id":"5aa71bbd.91b3a4","type":"inject","z":"95e80dab.1f92a","name":"Timer","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":130,"y":500,"wires":[["f4b528a7.1f0438"]]},{"id":"fd9bbc09.7e6b2","type":"comment","z":"95e80dab.1f92a","name":"Timed delete of 2 year and more old data ","info":"# Deletes data","x":220,"y":440,"wires":[]},{"id":"f4b528a7.1f0438","type":"sqlite","z":"95e80dab.1f92a","mydb":"2fc66835.1846f8","sqlquery":"fixed","sql":"DELETE FROM measurements WHERE (((select strftime('%s', 'now')) *1000) - time_stamp) > 1580304222","name":"SQLite DELETE","x":340,"y":500,"wires":[["e0d6ebd4.1020b8"]]},{"id":"e0d6ebd4.1020b8","type":"debug","z":"95e80dab.1f92a","name":"Delete log","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":560,"y":500,"wires":[]},{"id":"32f8a85f.e9cb68","type":"ui_button","z":"96cd2d27.4b11","name":"","group":"b18e9c1.45c816","order":6,"width":"3","height":1,"passthru":false,"label":"Set Default","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":110,"y":720,"wires":[["4470952b.11b4cc","2c2d4623.ff4e1a","c3e17a25.f627d8","9bcd5465.ea50e8"]]},{"id":"f77fc0f2.f34a8","type":"function","z":"96cd2d27.4b11","name":"Transform data for chart","func":"if(typeof from == 'undefined')\n    from = new Date(Date.now()).setDate(new Date().getDate() - 7)\nif(typeof to == 'undefined')\n    to = Date.now()\nif(typeof by == 'undefined')\n    by = \"time_stamp_daily\"\nif(typeof gateway == 'undefined')\n    gateway = \"\"\nif(typeof nodes == 'undefined'){\n    nodes = \"\"\n}\nif(typeof nodesSQL == 'undefined'){\n    nodesSQL = \"\"\n}\nif(typeof gatewaySQL == 'undefined'){\n    gatewaySQL = \"\"\n}\n\nif(typeof msg.from !== 'undefined')\n    from = msg.from\nif(typeof msg.to !== 'undefined')\n    to = msg.to\nif(typeof msg.by !== 'undefined')\n    by = msg.by\nif(typeof msg.gateway !== 'undefined'){\n    gateway = msg.gateway;\n    gatewaySQL = msg.gateway  ? `gateway = \"${msg.gateway}\" AND ` : \"\";\n}\n\nif(typeof msg.nodes !== 'undefined'){\n    nodes= msg.nodes;\n    nodesSQL = msg.nodes ?  `node_name = \"${msg.nodes}\" AND ` :  \"\"\n}\n\ngs = gatewaySQL || \"\";\nns = nodesSQL || \"\"\n\nreturn {\n    filters: {\n       from: from,\n       to: to,\n       by: by,\n       gateway: gateway,\n       nodes: nodes,\n       gatewaySQL: gs,\n       nodesSQL: ns\n    }\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1470,"y":800,"wires":[["b467dbfb.a851d8","b670be8a.8cd3e","85111d72.bd661"]]},{"id":"da36161b.af9998","type":"ui_date_picker","z":"96cd2d27.4b11","name":"from","label":"From","group":"b18e9c1.45c816","order":1,"width":7,"height":1,"passthru":true,"topic":"from","topicType":"msg","x":730,"y":620,"wires":[["204fdb82.50dbe4"]]},{"id":"2e3eade0.67b742","type":"function","z":"96cd2d27.4b11","name":"SQL select all data","func":"\n\nmsg.topic = `Select sensor, ${msg.filters.by} as time_stamp, avg(payload) as payload from (select * from measurements WHERE ${msg.filters.nodesSQL} ${msg.filters.gatewaySQL} time_stamp >= \"${msg.filters.from}\" AND time_stamp <= \"${msg.filters.to}\") GROUP BY ${msg.filters.by}, sensor order by time_stamp`\nmsg.defaultState = msg.payload\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1530,"y":1620,"wires":[["51558bdb.732994"]]},{"id":"cec993f6.9b40a","type":"function","z":"96cd2d27.4b11","name":"Transform to","func":"return {\n    to: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1050,"y":680,"wires":[["f77fc0f2.f34a8"]]},{"id":"204fdb82.50dbe4","type":"function","z":"96cd2d27.4b11","name":"Transform from","func":"return {\n    from: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1060,"y":620,"wires":[["f77fc0f2.f34a8"]]},{"id":"891ac85f.c80aa8","type":"ui_date_picker","z":"96cd2d27.4b11","name":"to","label":"To","group":"b18e9c1.45c816","order":2,"width":7,"height":1,"passthru":true,"topic":"to","topicType":"msg","x":730,"y":680,"wires":[["cec993f6.9b40a"]]},{"id":"85111d72.bd661","type":"function","z":"96cd2d27.4b11","name":"SQL select last known value","func":"\n\nmsg.topic = `SELECT * from measurements where (sensor, detector, time_stamp) in (select sensor, detector, max(time_stamp) from measurements where sensor != \"undefined\" AND gateway = \"${msg.filters.gateway}\" and node_name = \"${msg.filters.nodes}\" group by detector)`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1560,"y":1040,"wires":[["5c2fb66.3a90548"]]},{"id":"5c2fb66.3a90548","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":1800,"y":1040,"wires":[["cda6d473.255908","bffdd48.012ed28","b273ddb8.f5876","ca34d87.bccb028","9bb239a3.a72488","696d7b70.4d98f4","7a49f901.f011e8","6859beb5.58455"]]},{"id":"3afab101.c1625e","type":"ui_dropdown","z":"96cd2d27.4b11","name":"by","label":"Grouping","tooltip":"","place":"Select option","group":"b18e9c1.45c816","order":3,"width":7,"height":1,"passthru":true,"multiple":false,"options":[{"label":"5 minutes","value":"time_stamp_fiveMinutes","type":"str"},{"label":"Hourly","value":"time_stamp_hourly","type":"str"},{"label":"Daily","value":"time_stamp_daily","type":"str"},{"label":"Weekly","value":"time_stamp_weekly","type":"str"},{"label":"Monthly","value":"time_stamp_monthly","type":"str"},{"label":"Yearly","value":"time_stamp_yearly","type":"str"}],"payload":"","topic":"by","topicType":"msg","x":730,"y":740,"wires":[["ee6f4da5.e5bd3"]]},{"id":"bb569417.efc758","type":"ui_dropdown","z":"96cd2d27.4b11","name":"gateway","label":"Gateway","tooltip":"","place":"Select option","group":"b18e9c1.45c816","order":4,"width":7,"height":1,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"gateway","topicType":"msg","x":730,"y":800,"wires":[["9b0c0992.7bb448"]]},{"id":"b79f58fd.4e7618","type":"ui_dropdown","z":"96cd2d27.4b11","name":"nodes","label":"Node","tooltip":"","place":"Select option","group":"b18e9c1.45c816","order":5,"width":7,"height":1,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"nodes","topicType":"msg","x":730,"y":860,"wires":[["a76bb93e.630d18"]]},{"id":"4470952b.11b4cc","type":"function","z":"96cd2d27.4b11","name":"SQL select with filters","func":"\n\nmsg.topic = `SELECT distinct(gateway) FROM measurements `\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":1080,"wires":[["bf89ae1f.d7d2b"]]},{"id":"bf89ae1f.d7d2b","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":660,"y":1080,"wires":[["fd6acbaa.90be28"]]},{"id":"fd6acbaa.90be28","type":"function","z":"96cd2d27.4b11","name":"SQL select last known value","func":"\n\n/*msg.options = msg.payload.map((p) => ({\n    p.gateway: p.gateway\n}))*/\n\n\nmsg.options = msg.payload.map((p) =>  p.gateway)\nmsg.payload =  msg.payload.map((p) => p.gateway)[0] || null\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":480,"y":800,"wires":[["bb569417.efc758","a3eeb55d.e48858"]]},{"id":"a3eeb55d.e48858","type":"function","z":"96cd2d27.4b11","name":"SQL select with filters","func":"\n\nmsg.topic = `SELECT distinct node_name FROM measurements where gateway = \"${msg.payload}\"`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":460,"y":1140,"wires":[["9ccb35e5.386e18"]]},{"id":"9ccb35e5.386e18","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":660,"y":1140,"wires":[["904630f6.7f918"]]},{"id":"904630f6.7f918","type":"function","z":"96cd2d27.4b11","name":"SQL select last known value","func":"\n\n/*msg.options = msg.payload.map((p) => ({\n    p.gateway: p.gateway\n}))*/\n\n\nmsg.options = msg.payload.map((p) =>  p.node_name)\nmsg.payload = msg.payload.map((p) =>  p.node_name)[0] || null\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":480,"y":860,"wires":[["b79f58fd.4e7618"]]},{"id":"cf40c99.d7dc038","type":"function","z":"96cd2d27.4b11","name":"Transform data co2-meter","func":"\n\n\n\nlet co2 = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tco2.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"co2-meter\"],\n\t\t});\n}\n\nlet voc = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tvoc.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"voc-lp-sensor\"],\n\t\t});\n}\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"Co2 and voc\"],\n\t\t\tseries: [\"co2\",\"voc-lp-sensor\"],\n\t\t\tdata: [co2, voc],\n\t\t},\n\t],\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2330,"y":1740,"wires":[["3e10a391.bade9c"]]},{"id":"ecbcbf99.fd34f","type":"function","z":"96cd2d27.4b11","name":"Transform data hygrometer","func":"\n\n\n\nlet hygrometer = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\thygrometer.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"hygrometer\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"hygrometer\"],\n\t\t\tseries: [\"hygrometer\"],\n\t\t\tdata: [hygrometer],\n\t\t},\n\t],\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2340,"y":1800,"wires":[["4e0eca13.82c164"]]},{"id":"c3922f35.1de64","type":"function","z":"96cd2d27.4b11","name":"Transform data voc-lp-sensor","func":"\n\n\n\n\n\nlet voc = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tvoc.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"voc-lp-sensor\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"voc\"],\n\t\t\tseries: [\"voc\"],\n\t\t\tdata: [voc],\n\t\t},\n\t],\n};\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2350,"y":1860,"wires":[["1086f0c2.20bbbf"]]},{"id":"c310af36.77068","type":"function","z":"95e80dab.1f92a","name":"SQLite Insert","func":"\n//msg.payload = msg.payload[0]\nmsg.topic = `INSERT INTO measurements (node_name, sensor, detector, payload, time_stamp, gateway, transfered_timestamp, time_stamp_fiveMinutes, time_stamp_hourly, time_stamp_daily, time_stamp_monthly, time_stamp_weekly, time_stamp_yearly) VALUES (\"${msg.payload.node_name}\", \"${msg.payload.sensor}\", \"${msg.payload.detector}\", \"${msg.payload.payload}\", \"${msg.payload.time_stamp}\", \"${msg.payload.gateway}\", \"${msg.payload.transfered_timestamp}\", \"${msg.payload.time_stamp_fiveMinutes}\", \"${msg.payload.time_stamp_hourly}\", \"${msg.payload.time_stamp_daily}\", \"${msg.payload.time_stamp_monthly}\", \"${msg.payload.time_stamp_weekly}\", \"${msg.payload.time_stamp_yearly}\")` \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":690,"y":680,"wires":[["acb427e2.2aa4b8"]]},{"id":"acb427e2.2aa4b8","type":"sqlite","z":"95e80dab.1f92a","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":920,"y":680,"wires":[[]]},{"id":"f3f08129.ee5dc","type":"function","z":"95e80dab.1f92a","name":"SQLite Insert","func":"var data = JSON.parse(msg.payload)\n\n\nreturn [data.map((p) => ({\n    payload: {\n        ...p\n    }\n}))];","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":490,"y":680,"wires":[["c310af36.77068"]]},{"id":"cf9a2e89.167db","type":"inject","z":"95e80dab.1f92a","name":"Timer","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":130,"y":680,"wires":[["86fcba87.5475d8"]]},{"id":"86fcba87.5475d8","type":"http request","z":"95e80dab.1f92a","name":"","method":"GET","ret":"txt","paytoqs":"ignore","url":"https://raw.githubusercontent.com/MichalKliment/data/main/data.json","tls":"","persist":false,"proxy":"","authType":"","x":310,"y":680,"wires":[["f3f08129.ee5dc"]]},{"id":"ee6f4da5.e5bd3","type":"function","z":"96cd2d27.4b11","name":"Transform by","func":"return {\n    by: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1050,"y":740,"wires":[["f77fc0f2.f34a8"]]},{"id":"9b0c0992.7bb448","type":"function","z":"96cd2d27.4b11","name":"Transform gateways","func":"return {\n    gateway: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1080,"y":800,"wires":[["f77fc0f2.f34a8"]]},{"id":"a76bb93e.630d18","type":"function","z":"96cd2d27.4b11","name":"Transform nodes","func":"return {\n    nodes: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1070,"y":860,"wires":[["f77fc0f2.f34a8"]]},{"id":"2c2d4623.ff4e1a","type":"function","z":"96cd2d27.4b11","name":"Transform by","func":"return {\n    payload:  \"time_stamp_hourly\"\n    \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":740,"wires":[["3afab101.c1625e"]]},{"id":"c3e17a25.f627d8","type":"function","z":"96cd2d27.4b11","name":"Transform to","func":"return {\n    \n    payload: (new Date()).setSeconds(new Date().getSeconds() - 1)\n\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":410,"y":680,"wires":[["891ac85f.c80aa8"]]},{"id":"9bcd5465.ea50e8","type":"function","z":"96cd2d27.4b11","name":"Transform from","func":"return {\n    \n    payload: (new Date()).setDate(new Date().getDate() - 7)\n\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":420,"y":620,"wires":[["da36161b.af9998"]]},{"id":"ca34d87.bccb028","type":"function","z":"96cd2d27.4b11","name":"Transform actual temperature","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2210,"y":880,"wires":[["f17d951.3450a68"]]},{"id":"f17d951.3450a68","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":1,"width":2,"height":2,"gtype":"gage","title":"Actual temperature","label":"°C","format":"{{value}}","min":0,"max":"50","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2570,"y":880,"wires":[]},{"id":"4504ae8e.1b725","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":5,"width":2,"height":2,"gtype":"gage","title":"Actual battery","label":"V","format":"{{value}}","min":"6.6","max":"4.5","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2560,"y":940,"wires":[]},{"id":"9bb239a3.a72488","type":"function","z":"96cd2d27.4b11","name":"Transform actual battery","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"battery\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2190,"y":940,"wires":[["4504ae8e.1b725"]]},{"id":"696d7b70.4d98f4","type":"function","z":"96cd2d27.4b11","name":"Transform actual humanity","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"hygrometer\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2200,"y":1000,"wires":[["9391d2c3.0a412"]]},{"id":"9391d2c3.0a412","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":2,"width":2,"height":2,"gtype":"gage","title":"Actual humidity","label":"%","format":"{{value}}","min":"0","max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2560,"y":1000,"wires":[]},{"id":"7a49f901.f011e8","type":"function","z":"96cd2d27.4b11","name":"Transform actual co2","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"co2-meter\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2180,"y":1060,"wires":[["8e9628cf.0e59c8"]]},{"id":"8e9628cf.0e59c8","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":3,"width":2,"height":2,"gtype":"gage","title":"Actual co2","label":"PPM","format":"{{value}}","min":"400","max":"2000","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2550,"y":1060,"wires":[]},{"id":"cda6d473.255908","type":"function","z":"96cd2d27.4b11","name":"Transform data for lux-meter","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"lux-meter\")\nmsg.payload = msg.payload && msg.payload[0]  && Math.round(Math.log(msg.payload[0].payload) *100) / 100 || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2200,"y":1120,"wires":[["65dfca4e.784ee4"]]},{"id":"65dfca4e.784ee4","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":8,"width":2,"height":2,"gtype":"gage","title":"Actual lux-meter","label":"lm(lux)","format":"{{value}}","min":"0","max":"11","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2560,"y":1120,"wires":[]},{"id":"bffdd48.012ed28","type":"function","z":"96cd2d27.4b11","name":"Transform data for voc-lp-sensor","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"voc-lp-sensor\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2220,"y":1180,"wires":[["b53b0819.b96d08"]]},{"id":"b273ddb8.f5876","type":"function","z":"96cd2d27.4b11","name":"Transform data for barometer","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.detector == \"pressure\")\nmsg.payload = msg.payload && msg.payload[0]  && Math.round(msg.payload[0].payload / 100) || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2200,"y":1240,"wires":[["594e14bc.b4370c"]]},{"id":"b53b0819.b96d08","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":4,"width":2,"height":2,"gtype":"gage","title":"Actual voc-lp-sensor","label":"PPB","format":"{{value}}","min":"0","max":"500","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2580,"y":1180,"wires":[]},{"id":"594e14bc.b4370c","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":6,"width":2,"height":2,"gtype":"gage","title":"Actual barometer","label":"hPa","format":"{{value}}","min":"700","max":"1500","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2570,"y":1240,"wires":[]},{"id":"17614783.0b6fa8","type":"ui_form","z":"96cd2d27.4b11","name":"day","label":"Day temperature","group":"2e781aa3.1c35b6","order":1,"width":7,"height":1,"options":[{"label":"Day temperature","value":"day","type":"number","required":true,"rows":null},{"label":"Gateway","value":"gateway","type":"text","required":true,"rows":null},{"label":"Node","value":"nodes","type":"text","required":true,"rows":null},{"label":"From","value":"from","type":"date","required":true,"rows":null}],"formValue":{"day":"","gateway":"","nodes":"","from":""},"payload":"","submit":"Save","cancel":"Cancel","topic":"topic","topicType":"msg","splitLayout":"","x":2130,"y":480,"wires":[["38188ff7.4fd8a"]]},{"id":"fd532341.b818c","type":"function","z":"96cd2d27.4b11","name":"SQLite Insert","func":"\n//msg.payload = msg.payload[0]\nmsg.topic = `INSERT INTO measurements (node_name, gateway, time_stamp,  transfered_timestamp, time_stamp_fiveMinutes, time_stamp_hourly, time_stamp_daily, time_stamp_monthly, time_stamp_weekly, time_stamp_yearly) VALUES (\"${msg.payload.node_name}\", \"${msg.payload.sensor}\", \"${msg.payload.detector}\", \"${msg.payload.payload}\", \"${msg.payload.time_stamp}\", \"${msg.payload.gateway}\", \"${msg.payload.transfered_timestamp}\", \"${msg.payload.time_stamp_fiveMinutes}\", \"${msg.payload.time_stamp_hourly}\", \"${msg.payload.time_stamp_daily}\", \"${msg.payload.time_stamp_monthly}\", \"${msg.payload.time_stamp_weekly}\", \"${msg.payload.time_stamp_yearly}\")` \n\nreturn msg;","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":1010,"y":1820,"wires":[["70d20a49.e0efc4"]]},{"id":"70d20a49.e0efc4","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":1220,"y":1820,"wires":[[]]},{"id":"c2918e9e.5f31","type":"function","z":"96cd2d27.4b11","name":"SQLite Insert","func":"var data = JSON.parse(msg.payload)\n\n\nreturn [data.map((p) => ({\n    payload: {\n        ...p\n    }\n}))];","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":810,"y":1820,"wires":[["fd532341.b818c"]]},{"id":"b467dbfb.a851d8","type":"function","z":"96cd2d27.4b11","name":"SQLite Insert","func":"\n\n\nreturn {\n    payload: msg.filters\n}","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":1810,"y":520,"wires":[["17614783.0b6fa8","628bfe7f.6df8f","75660f69.6bb93"]]},{"id":"7ba12de1.97e9b4","type":"function","z":"96cd2d27.4b11","name":"Transform data for occupancy","func":"\n/*var previousElement = undefined;\nvar previousOccupancy = 0;\n//(concentrace CO2/10^6)*(objem mistnosti)*10^3\n\nvar occupancy = 228; //65 objem mistnosti\nvar maxAllowed = 10\n\n\n\nreturn {\n    payload: [\n        {\n            \"labels\": [\"XXX\"],\n            \"series\": [\"% occupancy of \" + maxAllowed],\n            \"data\": [msg.payload.filter((p) => p.sensor == \"co2-meter\").map((p) => ({\n                x: p.time_stamp,\n                y: (parseFloat(p.payload) * 0.001) * occupancy \n            }))\n            .map(\n        (p) => {\n            var actualCo2 = p.y;\n            if(previousElement === undefined)\n                previousElement = {\n                    x: p.x - 1,\n                    personCount:p.y,\n                    y: p.y,\n                    diference: 1\n                }\n                \n            \n            var  difference = (p.x - previousElement.x) / 1000;\n        \n            var a = previousOccupancy + (( actualCo2 - previousElement.y - (previousOccupancy * 0.0052 * difference)) /  ( 0.0052 * difference))\n            \n            if(a < 0) a = 0;\n            \n            var percentage = (a / maxAllowed) * 100\n            if(percentage > 150) \n                percentage = 150\n            \n            previousElement = p;\n            previousOccupancy = a;\n        \n            return {\n             ...p,\n             diference: difference,\n             personCount: a,\n             y: percentage\n            };\n        })]\n        }\n    ]    \n};*/\n\n\n\n\n\n\n\n\nlet occupancy = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (!v)\n\t    continue;\n    var occu = (v[\"occupancy\"] / msg.maxAllowed) * 100;\n\toccupancy.push({\n\t\tx: parseInt(key),\n\t\ty: occu > 150 ? 150 : occu\n\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"occupancy\"],\n\t\t\tseries: [\"occupancy\"],\n\t\t\tdata: [occupancy],\n\t\t},\n\t],\n};\n\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2350,"y":1980,"wires":[["be4e66cf.2c4d48","47421b9c.0d1e24"]]},{"id":"3e10a391.bade9c","type":"ui_chart","z":"96cd2d27.4b11","name":"CO2","group":"c6731282.9f3df","order":3,"width":28,"height":5,"label":"CO2","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2590,"y":1740,"wires":[[]]},{"id":"4e0eca13.82c164","type":"ui_chart","z":"96cd2d27.4b11","name":"Hydrometr","group":"c6731282.9f3df","order":2,"width":28,"height":5,"label":"Hydrometr","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2610,"y":1800,"wires":[[]]},{"id":"1086f0c2.20bbbf","type":"ui_chart","z":"96cd2d27.4b11","name":"Voc","group":"c6731282.9f3df","order":4,"width":28,"height":5,"label":"Voc","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2590,"y":1860,"wires":[[]]},{"id":"41566640.7b90e8","type":"ui_chart","z":"96cd2d27.4b11","name":"Lux","group":"c6731282.9f3df","order":5,"width":28,"height":5,"label":"Lux","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2590,"y":1920,"wires":[[]]},{"id":"be4e66cf.2c4d48","type":"ui_chart","z":"96cd2d27.4b11","name":"Occupancy","group":"c6731282.9f3df","order":6,"width":28,"height":5,"label":"Occupancy","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"0","ymax":"150","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2610,"y":1980,"wires":[[]]},{"id":"220247c4.b68878","type":"http in","z":"95e80dab.1f92a","name":"Register gateway","url":"registerGateway","method":"post","upload":false,"swaggerDoc":"","x":140,"y":340,"wires":[["8ff49760.38fa28"]]},{"id":"5c06b1c0.b5b29","type":"http response","z":"95e80dab.1f92a","name":"Response","statusCode":"","headers":{},"x":2460,"y":340,"wires":[]},{"id":"c20ddf0e.635fd","type":"function","z":"95e80dab.1f92a","name":"SQLite Insert","func":"\n  \nmsg.payload = JSON.parse(msg.payload)\n\nmsg.topic = `INSERT INTO gateways (gateway, login, pwd) VALUES (\"${msg.payload.login}\", \"${msg.payload.login}\", \"${msg.payload.pwd}\")` \nmsg.data = msg.payload;\nreturn msg;","outputs":1,"noerr":0,"initialize":"\n  \n  ","finalize":"","x":1630,"y":340,"wires":[["1f47660.ac56e9a"]]},{"id":"1f47660.ac56e9a","type":"sqlite","z":"95e80dab.1f92a","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":2020,"y":340,"wires":[["c0d48675.c1894","a532846d.558458"]]},{"id":"a80b9799.e6aa68","type":"data-generator","z":"95e80dab.1f92a","name":"Generate login and pwd for new GW","field":"payload","fieldType":"msg","syntax":"text","template":"{\n    \"login\": \"{{firstName}}\",\n    \"pwd\": \"{{guid}}\"\n}","x":1330,"y":340,"wires":[["c20ddf0e.635fd"]]},{"id":"a532846d.558458","type":"function","z":"95e80dab.1f92a","name":"Data to payload","func":"msg.payload = msg.data\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2240,"y":340,"wires":[["5c06b1c0.b5b29"]]},{"id":"9e671d5a.7a4b7","type":"http request","z":"25e85fe2.0ce1e","name":"Send request","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://localhost:1880/registerGateway","tls":"","persist":false,"proxy":"","authType":"basic","x":800,"y":780,"wires":[["2df0557.e6bc1aa"]]},{"id":"2df0557.e6bc1aa","type":"function","z":"25e85fe2.0ce1e","name":"Set config for GW","func":"msg = {\n   payload: JSON.parse(msg.payload)\n    \n}\n\n\nmsg.topic = `INSERT INTO config (gateway, login, pwd) VALUES (\"${msg.payload.login}\", \"${msg.payload.login}\",  \"${msg.payload.pwd}\")`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1050,"y":780,"wires":[["e8a92e8.f6e62d"]]},{"id":"e8a92e8.f6e62d","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"new-gateway.db","x":1350,"y":780,"wires":[[]]},{"id":"9a485bda.8bca08","type":"switch","z":"25e85fe2.0ce1e","name":"Has credentials?","property":"payload.length","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"str"},{"t":"neq","v":"1","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":550,"y":700,"wires":[["b48904b3.d1e848"],["9e671d5a.7a4b7"]]},{"id":"3c36052a.306ada","type":"sqlite","z":"25e85fe2.0ce1e","mydb":"f8a8b2a2.819eb","sqlquery":"fixed","sql":"SELECT * FROM config LIMIT 1","name":"GET SQLite Credentials","x":330,"y":700,"wires":[["9a485bda.8bca08"]]},{"id":"f1ea08bc.452a08","type":"function","z":"25e85fe2.0ce1e","name":"Prepare headers","func":"return {\n    headers: {\n        \"Authorization\": 'Basic ' + msg.gw\n    },\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1180,"y":700,"wires":[["f5087dcd.d565e8"]]},{"id":"1cf6bdf9.93a602","type":"base64","z":"25e85fe2.0ce1e","name":"Encode","action":"str","property":"gw","x":1000,"y":700,"wires":[["f1ea08bc.452a08"]]},{"id":"b48904b3.d1e848","type":"function","z":"25e85fe2.0ce1e","name":"Prepare login credentials","func":"return {\n    gw: msg.payload[0].login + \":\" + msg.payload[0].pwd\n}","outputs":1,"noerr":0,"initialize":"","finalize":"","x":790,"y":700,"wires":[["1cf6bdf9.93a602"]]},{"id":"27cfb7e7.6d7738","type":"sqlite","z":"95e80dab.1f92a","mydb":"2fc66835.1846f8","sqlquery":"fixed","sql":"SELECT * FROM gateways","name":"Get gateways to compare","x":850,"y":160,"wires":[["bdd07865.0b0458"]]},{"id":"90b7ca10.3bb608","type":"function","z":"95e80dab.1f92a","name":"Get GW token from headers","func":"return {\n    ...msg,\n    gw :msg.req.headers.authorization.split(\" \")[1],\n    insertData: msg.payload\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":360,"y":160,"wires":[["ba6422c3.9b52f"]]},{"id":"ba6422c3.9b52f","type":"base64","z":"95e80dab.1f92a","name":"Decode GW name","action":"b64","property":"gw","x":610,"y":160,"wires":[["27cfb7e7.6d7738"]]},{"id":"b485670.9b57998","type":"switch","z":"95e80dab.1f92a","name":"Is authorized?","property":"authorized","propertyType":"msg","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":1480,"y":160,"wires":[["78b1fbf6.caf83c"],["59f7ee63.35bd88"]]},{"id":"46759ea7.4da7a","type":"function","z":"96cd2d27.4b11","name":"Fill agregation","func":"var previousElement = undefined;\nvar previousOccupancy = 0;\n//(concentrace CO2/10^6)*(objem mistnosti)*10^3\n\nvar volume = msg.volume; //65 objem mistnosti\nvar maxAllowed = msg.maxAllowed;\nlet lastCO2Changed = undefined;\n\nlet temp = {\n\tthermometer: 0,\n\tpir: 0,\n\t\"lux-meter\": 0,\n\t\"co2-meter\": 0,\n\thygrometer: 0,\n\tbattery: 0,\n\tbarometer: 0,\n\toccupancy: 0,\n\tpreference_day_temperature: 0,\n\tpreference_night_temperature: 0,\n\t\"voc-lp-sensor\": 0,\n};\n\nfunction calculateOccupancy(\n\tpreviousOccupancy,\n\tactualCo2,\n\tLastCo2,\n\ttimeDifference\n) {\n\treturn (\n\t\tpreviousOccupancy +\n\t\t(actualCo2 - LastCo2 - previousOccupancy * 0.0052 * timeDifference) /\n\t\t\t(0.0052 * timeDifference)\n\t);\n}\n\nfunction groupBy(objectArray, property) {\n\treturn objectArray.reduce(function (acc, obj) {\n\t\tvar key = obj[property];\n\t\tif (!acc[key]) {\n\t\t\tacc[key] = { ...temp };\n\t\t}\n\t\t\n\t\tif (obj[\"sensor\"] == \"undefined\") \n\t\t    return acc;\n\t\t    \n\t\tif (obj[\"sensor\"] == \"co2-meter\") {\n\t\t\tactualTime = parseInt(key);\n\t\t\tacc[key][\"occupancy\"] = calculateOccupancy(\n\t\t\t\ttemp[\"occupancy\"],\n\t\t\t\tobj[\"payload\"] * 0.001 * volume,\n\t\t\t\t(temp[\"co2-meter\"] || obj[\"payload\"]) * 0.001 * volume,\n\t\t\t\t(actualTime - (lastCO2Changed || actualTime - 1)) / 1000\n\t\t\t);\n\t\t\tif (acc[key][\"occupancy\"] < 0) acc[key][\"occupancy\"] = 0;\n\t\t\tlastCO2Changed = actualTime;\n\t\t}\n\t\tacc[key][obj[\"sensor\"]] = obj[\"payload\"];\n\t\ttemp = acc[key];\n\t\treturn acc;\n\t}, {});\n}\n\ngroupBy(msg.defaultState, \"time_stamp\");\n\nreturn {\n\t...msg,\n\tpayload: groupBy(msg.payload, \"time_stamp\"),\n};\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2000,"y":1620,"wires":[["567bed8.95d0414","cf40c99.d7dc038","ecbcbf99.fd34f","c3922f35.1de64","7ba12de1.97e9b4","bc26c0b3.05675"]]},{"id":"cb13d2e2.b2be8","type":"ui_chart","z":"96cd2d27.4b11","name":"Temperature","group":"c6731282.9f3df","order":1,"width":28,"height":5,"label":"Temperature","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2630,"y":1600,"wires":[[]]},{"id":"a80ae08c.67a43","type":"function","z":"96cd2d27.4b11","name":"SQL select default state","func":"\n\nmsg.topic = `SELECT sensor, payload, time_stamp from (SELECT * from measurements where  ${msg.filters.nodesSQL} ${msg.filters.gatewaySQL}  time_stamp <= \"${msg.filters.to}\"  order by time_stamp desc) group by sensor`\nmsg.maxAllowed = msg.payload[0].maxCapacity\nmsg.volume = msg.payload[0].len * msg.payload[0].hei * msg.payload[0].wid\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1510,"y":1480,"wires":[["54a444c9.64441c","616620a.013dae"]]},{"id":"54a444c9.64441c","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":1700,"y":1480,"wires":[["2e3eade0.67b742","63aee37d.25bbec"]]},{"id":"51558bdb.732994","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":1780,"y":1620,"wires":[["46759ea7.4da7a"]]},{"id":"567bed8.95d0414","type":"function","z":"96cd2d27.4b11","name":"Transform data for temerature","func":"function getFeelTemperature(t, h, o, voc) {\n\tvar vocp = voc / 5500;\n\tvar res =\n\t\tt +\n\t\t0.33 *\n\t\t\t(h * 6.105 * Math.pow(2.718, (17.27 * t) / (237.7 + t)) + 1 * (o + vocp));\n\treturn res;\n}\n\nfunction setThermostat(measured, feel, preference) {\n\tif (feel < preference) {\n\t\treturn measured + preference - feel;\n\t}\n\treturn NaN;\n}\n\nlet feelTemperature = [];\nlet temperature = [];\nlet preference = [];\nlet termostat = [];\n\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (!v) continue;\n\t\n\toccupancy = v[\"occupancy\"] / msg.maxAllowed\n\n\tlet feel = getFeelTemperature(\n\t\tv[\"thermometer\"],\n\t\tv[\"hygrometer\"] / 100,\n\t\toccupancy,\n\t\tv[\"voc-lp-sensor\"]\n\t);\n\n\tvar hours = new Date(parseInt(key)).getHours();\n\tvar property =\n\t\thours < 20 && hours > 6\n\t\t\t? \"preference_day_temperature\"\n\t\t\t: \"preference_night_temperature\";\n\n\tfeelTemperature.push({\n\t\tx: parseInt(key),\n\t\ty: feel,\n\t});\n\n\ttemperature.push({\n\t\tx: parseInt(key),\n\t\ty: v[\"thermometer\"],\n\t});\n\n\tpreference.push({\n\t\tx: parseInt(key),\n\t\ty: v[property],\n\t});\n\n\ttermostat.push({\n\t\tx: parseInt(key),\n\t\ty: setThermostat(v[\"thermometer\"], feel, v[property]),\n\t});\n}\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"Temperature\"],\n\t\t\tseries: [\"feelTemperature\", \"temperature\", \"preference\", \"termostat\"],\n\t\t\tdata: [feelTemperature, temperature, preference, termostat],\n\t\t},\n\t],\n};\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2330,"y":1600,"wires":[["cb13d2e2.b2be8","66ba7a6c.654174"]]},{"id":"57d5a159.23bed","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":2580,"y":480,"wires":[["f107540a.9b1008"]]},{"id":"948eb7bf.f8f058","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":2580,"y":540,"wires":[["f107540a.9b1008"]]},{"id":"38188ff7.4fd8a","type":"function","z":"96cd2d27.4b11","name":"SQLite Insert","func":"\nfunction trimTo5min(date){\n  const temp = new Date(date);\n  const minutes = temp.getMinutes()\n  return temp.setMinutes(minutes - (minutes%5),0,0)\n}\n\nfunction trimOnHour(date){\n  const temp = new Date(date);\n  return temp.setMinutes(0,0,0);\n}\n\nfunction trimOnDaily(date){\n  const temp = new Date(date);\n  return temp.setHours(0,0,0,0);\n}\n\n\nfunction trimOnWeekly(date){\n  const temp = new Date(date);\n  let dayOfTheWeek = temp.getDay() - 1;\n  if(dayOfTheWeek < 0) dayOfTheWeek = 6\n  return new Date(temp.setDate(temp.getDate() - dayOfTheWeek)).setHours(0,0,0,0);\n}\n\nfunction trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n}\n\nfunction trimOnYearly(date){\n  const temp = new Date(date);\n  return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n}\n\n  \n\nlet now =  new Date(msg.payload.from).getTime() //Date.now()\n\nlet trimTo5minData = trimTo5min(now)\nlet trimOnHourData = trimOnHour(now)\nlet trimOnDailyData = trimOnDaily(now)\nlet trimOnWeeklyData = trimOnWeekly(now)\nlet trimOnMonthlyData = trimOnMontly(now)\nlet trimOnYearlyData = trimOnYearly(now)\n\nmsg =  {\n    payload: {\n        node_name: msg.payload.nodes,\n        gateway: msg.payload.gateway,\n        payload: parseFloat(msg.payload.day),\n        sensor: \"preference_day_temperature\",\n        detector: \"temperature\",\n        time_stamp: now,\n        time_stamp_fiveMinutes: trimTo5minData,\n        time_stamp_hourly: trimOnHourData,\n        time_stamp_daily: trimOnDailyData,\n        time_stamp_weekly: trimOnWeeklyData,\n        time_stamp_monthly: trimOnMonthlyData,\n        time_stamp_yearly: trimOnYearlyData,\n    }\n}\n\nmsg.topic = `INSERT INTO measurements (node_name,gateway,sensor,detector,payload,time_stamp,time_stamp_fiveMinutes,time_stamp_hourly,time_stamp_daily,time_stamp_weekly,time_stamp_monthly,time_stamp_yearly) VALUES (\"${msg.payload.node_name}\",\"${msg.payload.gateway}\",\"${msg.payload.sensor}\",\"${msg.payload.detector}\",\"${msg.payload.payload}\",\"${msg.payload.time_stamp}\",\"${msg.payload.time_stamp_fiveMinutes}\",\"${msg.payload.time_stamp_hourly}\",\"${msg.payload.time_stamp_daily}\",\"${msg.payload.time_stamp_weekly}\",\"${msg.payload.time_stamp_monthly}\",\"${msg.payload.time_stamp_yearly}\")`\n\n\nreturn msg","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":2350,"y":480,"wires":[["57d5a159.23bed"]]},{"id":"52562c9.9ca78d4","type":"function","z":"96cd2d27.4b11","name":"SQLite Insert","func":"\nfunction trimTo5min(date){\n  const temp = new Date(date);\n  const minutes = temp.getMinutes()\n  return temp.setMinutes(minutes - (minutes%5),0,0)\n}\n\nfunction trimOnHour(date){\n  const temp = new Date(date);\n  return temp.setMinutes(0,0,0);\n}\n\nfunction trimOnDaily(date){\n  const temp = new Date(date);\n  return temp.setHours(0,0,0,0);\n}\n\n\nfunction trimOnWeekly(date){\n  const temp = new Date(date);\n  let dayOfTheWeek = temp.getDay() - 1;\n  if(dayOfTheWeek < 0) dayOfTheWeek = 6\n  return new Date(temp.setDate(temp.getDate() - dayOfTheWeek)).setHours(0,0,0,0);\n}\n\nfunction trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n}\n\nfunction trimOnYearly(date){\n  const temp = new Date(date);\n  return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n}\n\n\nlet now =  new Date(msg.payload.from).getTime() //Date.now()\n\nlet trimTo5minData = trimTo5min(now)\nlet trimOnHourData = trimOnHour(now)\nlet trimOnDailyData = trimOnDaily(now)\nlet trimOnWeeklyData = trimOnWeekly(now)\nlet trimOnMonthlyData = trimOnMontly(now)\nlet trimOnYearlyData = trimOnYearly(now)\n\nmsg =  {\n    payload: {\n        node_name: msg.payload.nodes,\n        gateway: msg.payload.gateway,\n        payload: parseFloat(msg.payload.night),\n        sensor: \"preference_night_temperature\",\n        detector: \"temperature\",\n        time_stamp: now,\n        time_stamp_fiveMinutes: trimTo5minData,\n        time_stamp_hourly: trimOnHourData,\n        time_stamp_daily: trimOnDailyData,\n        time_stamp_weekly: trimOnWeeklyData,\n        time_stamp_monthly: trimOnMonthlyData,\n        time_stamp_yearly: trimOnYearlyData,\n    }\n}\n\nmsg.topic = `INSERT INTO measurements (node_name,gateway,sensor,detector,payload,time_stamp,time_stamp_fiveMinutes,time_stamp_hourly,time_stamp_daily,time_stamp_weekly,time_stamp_monthly,time_stamp_yearly) VALUES (\"${msg.payload.node_name}\",\"${msg.payload.gateway}\",\"${msg.payload.sensor}\",\"${msg.payload.detector}\",\"${msg.payload.payload}\",\"${msg.payload.time_stamp}\",\"${msg.payload.time_stamp_fiveMinutes}\",\"${msg.payload.time_stamp_hourly}\",\"${msg.payload.time_stamp_daily}\",\"${msg.payload.time_stamp_weekly}\",\"${msg.payload.time_stamp_monthly}\",\"${msg.payload.time_stamp_yearly}\")`\n\n\nreturn msg","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":2350,"y":540,"wires":[["948eb7bf.f8f058"]]},{"id":"628bfe7f.6df8f","type":"ui_form","z":"96cd2d27.4b11","name":"night","label":"Night temperature","group":"2e781aa3.1c35b6","order":2,"width":7,"height":1,"options":[{"label":"Night temperature","value":"night","type":"number","required":true,"rows":null},{"label":"Gateway","value":"gateway","type":"text","required":true,"rows":null},{"label":"Node","value":"nodes","type":"text","required":true,"rows":null},{"label":"From","value":"from","type":"date","required":false,"rows":null}],"formValue":{"night":"","gateway":"","nodes":"","from":""},"payload":"","submit":"Save","cancel":"Cancel","topic":"topic","topicType":"msg","splitLayout":"","x":2130,"y":540,"wires":[["52562c9.9ca78d4"]]},{"id":"f107540a.9b1008","type":"debug","z":"96cd2d27.4b11","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":2770,"y":540,"wires":[]},{"id":"47421b9c.0d1e24","type":"function","z":"96cd2d27.4b11","name":"Transform data for occupancy","func":"\nvar temp = msg.payload[0].data[0][msg.payload[0].data[0].length - 1]\n\n\nreturn {\n    payload: Math.round((temp && temp.y) || 0)\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2210,"y":1300,"wires":[["686dd611.872768"]]},{"id":"686dd611.872768","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":7,"width":2,"height":2,"gtype":"gage","title":"Actual occupancy","label":"%","format":"{{value}}","min":"0","max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2570,"y":1300,"wires":[]},{"id":"b670be8a.8cd3e","type":"function","z":"96cd2d27.4b11","name":"SQL select node dimensions","func":"\n\nmsg.topic = msg.filters.gateway && msg.filters.nodes ? `SELECT * from nodes where gateway = \"${msg.filters.gateway}\" and node_name = \"${msg.filters.nodes}\" LIMIT 1` : `SELECT * from nodes LIMIT 1`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1240,"y":1240,"wires":[["55b62225.3548dc"]]},{"id":"55b62225.3548dc","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":1560,"y":1220,"wires":[["7a6cb852.7de968"]]},{"id":"75660f69.6bb93","type":"ui_form","z":"96cd2d27.4b11","name":"nodes","label":"Room dimensions","group":"743fc269.14826c","order":1,"width":7,"height":1,"options":[{"label":"Width","value":"width","type":"number","required":true,"rows":null},{"label":"Height","value":"height","type":"number","required":true,"rows":null},{"label":"Length","value":"length","type":"number","required":true,"rows":null},{"label":"Max capacity","value":"maxCapacity","type":"number","required":true,"rows":null},{"label":"Gateway","value":"gateway","type":"text","required":true,"rows":null},{"label":"Node","value":"nodes","type":"text","required":true,"rows":null}],"formValue":{"width":"","height":"","length":"","maxCapacity":"","gateway":"","nodes":""},"payload":"","submit":"Save","cancel":"Cancel","topic":"topic","topicType":"msg","splitLayout":"","x":2130,"y":600,"wires":[["fdacdba5.0483c8"]]},{"id":"fdacdba5.0483c8","type":"function","z":"96cd2d27.4b11","name":"SQLite Update","func":"\n\n\n\n\n\n\nmsg.topic = `UPDATE nodes SET wid = ${msg.payload.width}, hei = ${msg.payload.height}, len = ${msg.payload.length}, maxCapacity = ${msg.payload.maxCapacity} where node_name = \"${msg.payload.nodes}\" AND gateway = \"${msg.payload.gateway}\"`\n\n\n\nreturn msg","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":2360,"y":600,"wires":[["7b0b79e8.08c768"]]},{"id":"7b0b79e8.08c768","type":"sqlite","z":"96cd2d27.4b11","mydb":"2fc66835.1846f8","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"cloud.db","x":2580,"y":600,"wires":[["f107540a.9b1008"]]},{"id":"66ba7a6c.654174","type":"function","z":"96cd2d27.4b11","name":"Transform data for termostat","func":"var temp = msg.payload[0].data[3][msg.payload[0].data[3].length - 1]\n\nreturn {\n    payload: Math.round((temp && temp.y) || 0)\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2200,"y":1360,"wires":[["42b5c00a.6b511"]]},{"id":"42b5c00a.6b511","type":"ui_gauge","z":"96cd2d27.4b11","name":"","group":"ffc4eaa4.dbe528","order":1,"width":2,"height":2,"gtype":"gage","title":"Actual set termostat","label":"°C","format":"{{value}}","min":0,"max":"50","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2580,"y":1360,"wires":[]},{"id":"bc26c0b3.05675","type":"function","z":"96cd2d27.4b11","name":"Transform data voc-lp-sensor","func":"\n\n\n\n\n\nlet lux = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tlux.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"lux-meter\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"lux\"],\n\t\t\tseries: [\"lux\"],\n\t\t\tdata: [lux],\n\t\t},\n\t],\n};\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2350,"y":1920,"wires":[["41566640.7b90e8"]]},{"id":"6859beb5.58455","type":"function","z":"96cd2d27.4b11","name":"Fill agregation","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"voc-lp-sensor\")\nmsg.payload = msg.payload && msg.payload[0]  && new Date(msg.payload[0].time_stamp).toISOString() \n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2160,"y":1420,"wires":[["6b6dc036.92c7e"]]},{"id":"4682a7b9.d156d","type":"comment","z":"95e80dab.1f92a","name":"Import DB from GitHub","info":"","x":160,"y":620,"wires":[]},{"id":"ba456d68.72f0f","type":"comment","z":"95e80dab.1f92a","name":"Insert data from Gateway request","info":"# Deletes data","x":190,"y":100,"wires":[]},{"id":"88cbe51c.cb5ba","type":"comment","z":"95e80dab.1f92a","name":"Register new gateway","info":"# Deletes data","x":160,"y":280,"wires":[]},{"id":"8ff49760.38fa28","type":"node-red-contrib-httpauth","z":"95e80dab.1f92a","name":"Overeni","file":"","cred":"","authType":"Basic","realm":"","username":"UU","password":"PridejGateway","hashed":false,"x":340,"y":340,"wires":[["a80b9799.e6aa68"]]},{"id":"6b6dc036.92c7e","type":"ui_template","z":"96cd2d27.4b11","group":"ffc4eaa4.dbe528","name":"","order":0,"width":"6","height":"2","format":"<h3>Last Sync</h3>\n<div ng-bind-html=\"msg.payload\"></div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":2540,"y":1420,"wires":[[]]},{"id":"e5e4c6fd.e98918","type":"ui_button","z":"96cd2d27.4b11","name":"","group":"b18e9c1.45c816","order":6,"width":"3","height":1,"passthru":false,"label":"Refresh","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":940,"y":960,"wires":[["f77fc0f2.f34a8"]]},{"id":"7a6cb852.7de968","type":"switch","z":"96cd2d27.4b11","name":"","property":"payload.length","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"neq","v":"0","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1350,"y":1360,"wires":[["bbb9a570.d57278"],["a80ae08c.67a43"]]},{"id":"bbb9a570.d57278","type":"function","z":"96cd2d27.4b11","name":"SQLite Update","func":"\nmsg.payload = {\n    length: 5,\n    width: 5,\n    height: 5,\n    maxCapacity: 4\n}\n\n\nmsg.topic = `INSERT INTO nodes (node_name,gateway,wid,hei,len,maxCapacity) VALUES (\"${msg.filters.nodes}\",\"${msg.filters.gateway}\",\"${msg.payload.width}\",\"${msg.payload.height}\",\"${msg.payload.length}\",\"${msg.payload.maxCapacity}\")`\n\n// pretypovani pro \nmsg.payload = [msg.payload]\n\n\nreturn msg","outputs":1,"noerr":0,"initialize":"  function trimOnMontly(date){\n    const temp = new Date(date);\n    return new Date(temp.setDate(1)).setHours(0,0,0,0);\n  }\n  \n  function trimOnYearly(date){\n    const temp = new Date(date);\n    return new Date(temp.setMonth(1,1)).setHours(0,0,0,0);\n  }\n  \n  ","finalize":"","x":1560,"y":1360,"wires":[["7b0b79e8.08c768","a80ae08c.67a43"]]},{"id":"616620a.013dae","type":"function","z":"96cd2d27.4b11","name":"","func":"\nreturn {\n    payload: {\n        width:parseFloat(msg.payload[0].wid),\n        height: parseFloat(msg.payload[0].hei),\n        length: parseFloat(msg.payload[0].len),\n        maxCapacity: msg.payload[0].maxCapacity,\n    }\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1910,"y":740,"wires":[["75660f69.6bb93"]]},{"id":"3e5ecb23.cbc664","type":"function","z":"5c09d4fc.97a754","name":"Transform actual temperature","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2470,"y":280,"wires":[["74f62627.9b1d28"]]},{"id":"74f62627.9b1d28","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":1,"width":2,"height":2,"gtype":"gage","title":"Actual temperature","label":"°C","format":"{{value}}","min":0,"max":"50","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2830,"y":280,"wires":[]},{"id":"3c4f04ee.934a3c","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":5,"width":2,"height":2,"gtype":"gage","title":"Actual battery","label":"V","format":"{{value}}","min":"6.6","max":"4.5","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2820,"y":340,"wires":[]},{"id":"e4c4c559.16c2b8","type":"function","z":"5c09d4fc.97a754","name":"Transform actual battery","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"battery\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2450,"y":340,"wires":[["3c4f04ee.934a3c"]]},{"id":"e308c877.23c2a8","type":"function","z":"5c09d4fc.97a754","name":"Transform actual humanity","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"hygrometer\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2460,"y":400,"wires":[["e0904dce.d7f62"]]},{"id":"e0904dce.d7f62","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":2,"width":2,"height":2,"gtype":"gage","title":"Actual humidity","label":"%","format":"{{value}}","min":"0","max":"100","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2820,"y":400,"wires":[]},{"id":"23af804.42bd98","type":"function","z":"5c09d4fc.97a754","name":"Transform actual co2","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"co2-meter\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2440,"y":460,"wires":[["940942ed.b303a"]]},{"id":"940942ed.b303a","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":3,"width":2,"height":2,"gtype":"gage","title":"Actual co2","label":"PPM","format":"{{value}}","min":"400","max":"2000","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2810,"y":460,"wires":[]},{"id":"1357170b.b67699","type":"function","z":"5c09d4fc.97a754","name":"Transform data for lux-meter","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"lux-meter\")\nmsg.payload = msg.payload && msg.payload[0]  && Math.round(Math.log(msg.payload[0].payload) *100) / 100 || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2460,"y":520,"wires":[["d6d4715.593569"]]},{"id":"d6d4715.593569","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":8,"width":2,"height":2,"gtype":"gage","title":"Actual lux-meter","label":"lm(lux)","format":"{{value}}","min":"0","max":"11","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2820,"y":520,"wires":[]},{"id":"34650055.8a59a","type":"function","z":"5c09d4fc.97a754","name":"Transform data for voc-lp-sensor","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.sensor == \"voc-lp-sensor\")\nmsg.payload = msg.payload && msg.payload[0]  && msg.payload[0].payload || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2480,"y":580,"wires":[["e6d1d463.989e38"]]},{"id":"e30b07b4.23ade8","type":"function","z":"5c09d4fc.97a754","name":"Transform data for barometer","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nmsg.payload = msg.payload.filter((p) => p.detector == \"pressure\")\nmsg.payload = msg.payload && msg.payload[0]  && Math.round(msg.payload[0].payload / 100) || 0\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2460,"y":640,"wires":[["8e74cf17.cdc75"]]},{"id":"e6d1d463.989e38","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":4,"width":2,"height":2,"gtype":"gage","title":"Actual voc-lp-sensor","label":"PPB","format":"{{value}}","min":"0","max":"500","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2840,"y":580,"wires":[]},{"id":"8e74cf17.cdc75","type":"ui_gauge","z":"5c09d4fc.97a754","name":"","group":"7ecd100c.cfa4c","order":6,"width":2,"height":2,"gtype":"gage","title":"Actual barometer","label":"hPa","format":"{{value}}","min":"700","max":"1500","colors":["#00b500","#e6e600","#ca3838"],"seg1":"","seg2":"","x":2830,"y":640,"wires":[]},{"id":"531cb67d.c20b38","type":"ui_button","z":"5c09d4fc.97a754","name":"","group":"9895f9a4.b9fc78","order":6,"width":"3","height":1,"passthru":false,"label":"Set Default","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":250,"y":640,"wires":[["bf02b285.016ca","302ccaa7.6e1dc6"]]},{"id":"c2dc4416.71e3b8","type":"function","z":"5c09d4fc.97a754","name":"Transform data for chart","func":"if(typeof from == 'undefined')\n    from = new Date(Date.now()).setDate(new Date().getDate() - 7)\nif(typeof to == 'undefined')\n    to = Date.now()\nif(typeof by == 'undefined')\n    by = \"time_stamp_daily\"\n\nif(typeof nodes == 'undefined'){\n    nodes = \"\"\n}\nif(typeof nodesSQL == 'undefined'){\n    nodesSQL = \"\"\n}\n\nif(typeof msg.from !== 'undefined')\n    from = msg.from\nif(typeof msg.to !== 'undefined')\n    to = msg.to\nif(typeof msg.by !== 'undefined')\n    by = msg.by\n\nif(typeof msg.nodes !== 'undefined'){\n    nodes= msg.nodes;\n    nodesSQL = msg.nodes ?  `node_name = \"${msg.nodes}\" AND ` :  \"\"\n}\n\n\nns = nodesSQL || \"\"\n\nreturn {\n    filters: {\n       by: by,\n       nodes: nodes,\n       nodesSQL: ns\n    }\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1610,"y":720,"wires":[["66eff1a8.19f0f","46f10785.4a3928","8d59723.13bf89","aeab2986.8f1c28"]]},{"id":"66eff1a8.19f0f","type":"function","z":"5c09d4fc.97a754","name":"SQL select last known value","func":"\n\nmsg.topic = `SELECT * from measurements where (sensor, detector, time_stamp) in (select sensor, detector, max(time_stamp) from measurements where sensor != \"undefined\" AND node_name = \"${msg.filters.nodes}\" group by detector)`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1860,"y":660,"wires":[["67c7fcad.615174"]]},{"id":"9d921f18.401fa","type":"ui_dropdown","z":"5c09d4fc.97a754","name":"by","label":"Grouping","tooltip":"","place":"Select option","group":"9895f9a4.b9fc78","order":3,"width":7,"height":1,"passthru":true,"multiple":false,"options":[{"label":"5 minutes","value":"time_stamp_fiveMinutes","type":"str"},{"label":"Hourly","value":"time_stamp_hourly","type":"str"},{"label":"Daily","value":"time_stamp_daily","type":"str"},{"label":"Weekly","value":"time_stamp_weekly","type":"str"}],"payload":"","topic":"by","topicType":"msg","x":870,"y":660,"wires":[["8fbdb43a.18e478"]]},{"id":"7c5933ca.18085c","type":"ui_dropdown","z":"5c09d4fc.97a754","name":"nodes","label":"Node","tooltip":"","place":"Select option","group":"9895f9a4.b9fc78","order":5,"width":7,"height":1,"passthru":true,"multiple":false,"options":[{"label":"","value":"","type":"str"}],"payload":"","topic":"nodes","topicType":"msg","x":870,"y":780,"wires":[["c5b524e5.f87328"]]},{"id":"302ccaa7.6e1dc6","type":"function","z":"5c09d4fc.97a754","name":"SQL select with filters","func":"\n\nmsg.topic = `SELECT distinct node_name FROM measurements`\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":1060,"wires":[["80c2c5d7.ded178"]]},{"id":"80c2c5d7.ded178","type":"sqlite","z":"5c09d4fc.97a754","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":810,"y":1060,"wires":[["13ab6947.76d157"]]},{"id":"13ab6947.76d157","type":"function","z":"5c09d4fc.97a754","name":"SQL select last known value","func":"\n\n/*msg.options = msg.payload.map((p) => ({\n    p.gateway: p.gateway\n}))*/\n\n\nmsg.options = msg.payload.map((p) =>  p.node_name)\nmsg.payload = msg.payload.map((p) =>  p.node_name)[0] || null\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":620,"y":780,"wires":[["7c5933ca.18085c"]]},{"id":"8fbdb43a.18e478","type":"function","z":"5c09d4fc.97a754","name":"Transform by","func":"return {\n    by: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1190,"y":660,"wires":[["c2dc4416.71e3b8"]]},{"id":"c5b524e5.f87328","type":"function","z":"5c09d4fc.97a754","name":"Transform nodes","func":"return {\n    nodes: msg.payload\n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1210,"y":780,"wires":[["c2dc4416.71e3b8"]]},{"id":"bf02b285.016ca","type":"function","z":"5c09d4fc.97a754","name":"Transform by","func":"return {\n    payload:  \"time_stamp_hourly\"\n    \n}\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":550,"y":660,"wires":[["9d921f18.401fa"]]},{"id":"9ec28dd0.4609d","type":"ui_button","z":"5c09d4fc.97a754","name":"","group":"9895f9a4.b9fc78","order":6,"width":"3","height":1,"passthru":false,"label":"Refresh","tooltip":"","color":"","bgcolor":"","icon":"","payload":"","payloadType":"str","topic":"topic","topicType":"msg","x":1220,"y":880,"wires":[["c2dc4416.71e3b8"]]},{"id":"67c7fcad.615174","type":"sqlite","z":"5c09d4fc.97a754","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":2090,"y":660,"wires":[["e30b07b4.23ade8","34650055.8a59a","1357170b.b67699","23af804.42bd98","e308c877.23c2a8","e4c4c559.16c2b8","3e5ecb23.cbc664"]]},{"id":"46f10785.4a3928","type":"function","z":"5c09d4fc.97a754","name":"SQL select all data","func":"\n\nmsg.topic = `Select sensor, ${msg.filters.by} as time_stamp, avg(payload) as payload from (select * from measurements WHERE node_name = \"${msg.filters.nodes}\") GROUP BY ${msg.filters.by}, sensor order by time_stamp`\nmsg.defaultState = msg.payload\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1850,"y":980,"wires":[["c42d2b25.78ff08"]]},{"id":"4379600c.2aa6f","type":"function","z":"5c09d4fc.97a754","name":"Transform data co2-meter","func":"\n\n\n\nlet co2 = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tco2.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"co2-meter\"],\n\t\t});\n}\n\nlet voc = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tvoc.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"voc-lp-sensor\"],\n\t\t});\n}\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"Co2 and voc\"],\n\t\t\tseries: [\"co2\",\"voc-lp-sensor\"],\n\t\t\tdata: [co2, voc],\n\t\t},\n\t],\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2650,"y":1100,"wires":[["a829cfa9.072f9"]]},{"id":"53265aae.095984","type":"function","z":"5c09d4fc.97a754","name":"Transform data hygrometer","func":"\n\n\n\nlet hygrometer = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\thygrometer.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"hygrometer\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"hygrometer\"],\n\t\t\tseries: [\"hygrometer\"],\n\t\t\tdata: [hygrometer],\n\t\t},\n\t],\n};","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2660,"y":1160,"wires":[["ab880793.86a278"]]},{"id":"b646b14c.7cc0f","type":"function","z":"5c09d4fc.97a754","name":"Transform data voc-lp-sensor","func":"\n\n\n\n\n\nlet voc = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tvoc.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"voc-lp-sensor\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"voc\"],\n\t\t\tseries: [\"voc\"],\n\t\t\tdata: [voc],\n\t\t},\n\t],\n};\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2670,"y":1220,"wires":[["513380a5.d35f4"]]},{"id":"a829cfa9.072f9","type":"ui_chart","z":"5c09d4fc.97a754","name":"CO2","group":"f8cc76eb.4be158","order":3,"width":28,"height":5,"label":"CO2","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2910,"y":1100,"wires":[[]]},{"id":"ab880793.86a278","type":"ui_chart","z":"5c09d4fc.97a754","name":"Hydrometr","group":"f8cc76eb.4be158","order":2,"width":28,"height":5,"label":"Hydrometr","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2930,"y":1160,"wires":[[]]},{"id":"513380a5.d35f4","type":"ui_chart","z":"5c09d4fc.97a754","name":"Voc","group":"f8cc76eb.4be158","order":4,"width":28,"height":5,"label":"Voc","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2910,"y":1220,"wires":[[]]},{"id":"2a5e09a2.a189a6","type":"ui_chart","z":"5c09d4fc.97a754","name":"Lux","group":"f8cc76eb.4be158","order":5,"width":28,"height":5,"label":"Lux","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2910,"y":1280,"wires":[[]]},{"id":"4fb89524.a46c6c","type":"function","z":"5c09d4fc.97a754","name":"Fill agregation","func":"var previousElement = undefined;\n//var previousOccupancy = 0;\n//(concentrace CO2/10^6)*(objem mistnosti)*10^3\n\n// var volume = msg.volume; //65 objem mistnosti\n// var maxAllowed = msg.maxAllowed;\n// let lastCO2Changed = undefined;\n\nlet temp = {\n\tthermometer: 0,\n\tpir: 0,\n\t\"lux-meter\": 0,\n\t\"co2-meter\": 0,\n\thygrometer: 0,\n\tbattery: 0,\n\tbarometer: 0,\n\toccupancy: 0,\n\tpreference_day_temperature: 0,\n\tpreference_night_temperature: 0,\n\t\"voc-lp-sensor\": 0,\n};\n\n/*function calculateOccupancy(\n\tpreviousOccupancy,\n\tactualCo2,\n\tLastCo2,\n\ttimeDifference\n) {\n\treturn (\n\t\tpreviousOccupancy +\n\t\t(actualCo2 - LastCo2 - previousOccupancy * 0.0052 * timeDifference) /\n\t\t\t(0.0052 * timeDifference)\n\t);\n}*/\n\nfunction groupBy(objectArray, property) {\n\treturn objectArray.reduce(function (acc, obj) {\n\t\tvar key = obj[property];\n\t\tif (!acc[key]) {\n\t\t\tacc[key] = { ...temp };\n\t\t}\n\t\t\n\t\tif (obj[\"sensor\"] == \"undefined\") \n\t\t    return acc;\n\t\t    \n/*\t\tif (obj[\"sensor\"] == \"co2-meter\") {\n\t\t\tactualTime = parseInt(key);\n\t\t\tacc[key][\"occupancy\"] = calculateOccupancy(\n\t\t\t\ttemp[\"occupancy\"],\n\t\t\t\tobj[\"payload\"] * 0.001 * volume,\n\t\t\t\t(temp[\"co2-meter\"] || obj[\"payload\"]) * 0.001 * volume,\n\t\t\t\t(actualTime - (lastCO2Changed || actualTime - 1)) / 1000\n\t\t\t);\n\t\t\tif (acc[key][\"occupancy\"] < 0) acc[key][\"occupancy\"] = 0;\n\t\t\tlastCO2Changed = actualTime;\n\t\t}*/\n\t\tacc[key][obj[\"sensor\"]] = obj[\"payload\"];\n\t\ttemp = acc[key];\n\t\treturn acc;\n\t}, {});\n}\n\n\nlet defaultValue = [\n\t{ sensor: \"barometer\", payload: 0 },\n\t{ sensor: \"battery\", payload: 0 },\n\t{ sensor: \"co2-meter\", payload: 0 },\n\t{ sensor: \"hygrometer\", payload: 0 },\n\t{ sensor: \"lux-meter\", payload: 0 },\n\t{ sensor: \"pir\", payload: 0 },\n\t{\n\t\tsensor: \"preference_day_temperature\",\n\t\tpayload: 0,\n\t},\n\t{\n\t\tsensor: \"preference_night_temperature\",\n\t\tpayload: 0,\n\t},\n\t{ sensor: \"thermometer\", payload: 0 },\n\t{ sensor: \"voc-lp-sensor\", payload: 0 },\n];\n\n\n\ngroupBy(defaultValue, \"time_stamp\");\n\nreturn {\n\t...msg,\n\tpayload: groupBy(msg.payload, \"time_stamp\"),\n};\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2320,"y":980,"wires":[["15e6ef92.6b6bb","4379600c.2aa6f","53265aae.095984","b646b14c.7cc0f","27471bed.f22854"]]},{"id":"190b0346.454a6d","type":"ui_chart","z":"5c09d4fc.97a754","name":"Temperature","group":"f8cc76eb.4be158","order":1,"width":28,"height":5,"label":"Temperature","chartType":"line","legend":"true","xformat":"dd HH:mm","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":"10","removeOlderPoints":"1000","removeOlderUnit":"604800","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"x":2950,"y":960,"wires":[[]]},{"id":"c42d2b25.78ff08","type":"sqlite","z":"5c09d4fc.97a754","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":2110,"y":980,"wires":[["4fb89524.a46c6c"]]},{"id":"15e6ef92.6b6bb","type":"function","z":"5c09d4fc.97a754","name":"Transform data for temerature","func":"\n\nlet temperature = [];\n\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (!v) continue;\n\n\ttemperature.push({\n\t\tx: parseInt(key),\n\t\ty: v[\"thermometer\"],\n\t});\n\n\n}\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"Temperature\"],\n\t\t\tseries: [\"temperature\"],\n\t\t\tdata: [temperature],\n\t\t},\n\t],\n};\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2650,"y":960,"wires":[["190b0346.454a6d"]]},{"id":"27471bed.f22854","type":"function","z":"5c09d4fc.97a754","name":"Transform data voc-lp-sensor","func":"\n\n\n\n\n\nlet lux = [];\nfor (const [key, v] of Object.entries(msg.payload)) {\n\tif (v)\n\t\tlux.push({\n\t\t\tx: parseInt(key),\n\t\t\ty: v[\"lux-meter\"],\n\t\t});\n}\n\n\nreturn {\n\tpayload: [\n\t\t{\n\t\t\tlabels: [\"lux\"],\n\t\t\tseries: [\"lux\"],\n\t\t\tdata: [lux],\n\t\t},\n\t],\n};\n\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2670,"y":1280,"wires":[["2a5e09a2.a189a6"]]},{"id":"63aee37d.25bbec","type":"debug","z":"96cd2d27.4b11","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1900,"y":1540,"wires":[]},{"id":"b67b97a2.6d9248","type":"ui_ui_control","z":"96cd2d27.4b11","name":"","events":"all","x":130,"y":620,"wires":[["32f8a85f.e9cb68"]]},{"id":"71c377f3.c361b8","type":"ui_ui_control","z":"5c09d4fc.97a754","name":"","events":"all","x":220,"y":500,"wires":[["531cb67d.c20b38"]]},{"id":"2b07013b.7872be","type":"ui_template","z":"5c09d4fc.97a754","group":"7ecd100c.cfa4c","name":"","order":0,"width":"6","height":"2","format":"<h3>Last Sync</h3>\n<div ng-bind-html=\"msg.payload\"></div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":2800,"y":860,"wires":[[]]},{"id":"225c479e.bfb038","type":"function","z":"5c09d4fc.97a754","name":"Fill agregation","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nvar temp = msg.payload && (msg.payload[0] || null)\nif(temp != null)\n    temp = new Date(temp.time_stamp).toISOString()\nelse \n    temp = \"No sync\"\n    \n    \nmsg.payload = temp\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2380,"y":860,"wires":[["2b07013b.7872be"]]},{"id":"8d59723.13bf89","type":"function","z":"5c09d4fc.97a754","name":"SQL select last sync time","func":"\n\nmsg.topic = `SELECT time_stamp from measurements order by time_stamp desc limit 1`\nmsg.defaultState = msg.payload\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1930,"y":860,"wires":[["2c322e28.f3a282"]]},{"id":"2c322e28.f3a282","type":"sqlite","z":"5c09d4fc.97a754","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":2150,"y":860,"wires":[["225c479e.bfb038"]]},{"id":"aeab2986.8f1c28","type":"function","z":"5c09d4fc.97a754","name":"SQL count all","func":"\n\nmsg.topic = `SELECT COUNT(*) as value from measurements where transfered_timestamp is null UNION SELECT COUNT(*) from measurements`\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":1900,"y":740,"wires":[["26c90f94.a43db"]]},{"id":"26c90f94.a43db","type":"sqlite","z":"5c09d4fc.97a754","mydb":"f8a8b2a2.819eb","sqlquery":"msg.topic","sql":"INSERT INTO measurements (node_name) VALUES (\"test\");","name":"gateway.db","x":2130,"y":740,"wires":[["55fcc192.9bf82"]]},{"id":"55fcc192.9bf82","type":"function","z":"5c09d4fc.97a754","name":"compoute wait for sync","func":"/*msg.payload = msg.payload.filter((p) => p.sensor == \"thermometer\").sort((a,b) =>  b.time_stamp - a.time_stamp)*/\n\nvar temp = msg.payload[0].value \n    \nmsg.payload = temp;\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":2450,"y":740,"wires":[["5641ae51.a5598"]]},{"id":"5641ae51.a5598","type":"ui_template","z":"5c09d4fc.97a754","group":"7ecd100c.cfa4c","name":"","order":0,"width":"6","height":"2","format":"<h3>Waiting records for Sync</h3>\n<div ng-bind-html=\"msg.payload\"></div>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":2780,"y":740,"wires":[[]]}]